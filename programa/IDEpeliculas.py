#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.6 on Fri Sep 11 22:29:45 2020
#

import numpy as np
import wx
import wx.lib.agw.aui as aui
import wx.lib.mixins.inspection as wit
from PIL import Image

from claseDialogoCalibracion import DialogoCalibracion

import matplotlib as mpl
from matplotlib.backends.backend_wxagg import FigureCanvasWxAgg as FigureCanvas
from matplotlib.backends.backend_wxagg import NavigationToolbar2WxAgg as NavigationToolbar

import tifffile as tiff


# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade
wx.InitAllImageHandlers()

def leerDosis(nombre_archivo):
	arch=open(nombre_archivo)
	dosis=[]
	for line in arch.readlines():
		dosis.append(float(line))
	return dosis
	
	
class ImagenCuadernoMatplotlib(wx.Panel):
    def __init__(self, parent, id=-1, dpi=None, **kwargs):
        wx.Panel.__init__(self, parent, id=id, **kwargs)
        self.figure = mpl.figure.Figure(dpi=dpi, figsize=(2, 2))
        self.canvas = FigureCanvas(self, -1, self.figure)
        self.toolbar = NavigationToolbar(self.canvas)
        self.toolbar.Realize()

        sizer = wx.BoxSizer(wx.VERTICAL)
        sizer.Add(self.canvas, 1, wx.EXPAND)
        sizer.Add(self.toolbar, 0, wx.LEFT | wx.EXPAND)
        self.SetSizer(sizer)

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((1122, 668))
        
        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Guardar", "")
        self.Bind(wx.EVT_MENU, self.guardarImagen, id=item.GetId())
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Importar...", "")
        self.Bind(wx.EVT_MENU, self.importarImagen, id=item.GetId())
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Exportar...", "")
        self.Bind(wx.EVT_MENU, self.exportarImagen, id=item.GetId())
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Abrir...", "")
        self.Bind(wx.EVT_MENU, self.abrirImagen, id=item.GetId())
        self.frame_menubar.Append(wxglade_tmp_menu, "Menu")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu_sub = wx.Menu()
        item = wxglade_tmp_menu_sub.Append(wx.ID_ANY, "Manual", "")
        self.Bind(wx.EVT_MENU, self.calibracion_manual, id=item.GetId())
        item = wxglade_tmp_menu_sub.Append(wx.ID_ANY, "Automatica", "")
        self.Bind(wx.EVT_MENU, self.calibracion_automatica, id=item.GetId())
        wxglade_tmp_menu.Append(wx.ID_ANY, u"Generar Calibración", wxglade_tmp_menu_sub, "")
        self.frame_menubar.Append(wxglade_tmp_menu, u"Calibración")
        wxglade_tmp_menu = wx.Menu()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Nuevo mapa", "")
        self.Bind(wx.EVT_MENU, self.mapa_de_dosis, id=item.GetId())
        self.frame_menubar.Append(wxglade_tmp_menu, "Mapa de dosis")
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end
        self.notebook_1 = aui.AuiNotebook(self)
        self.paginas=[]
        self.paginas.append(ImagenCuadernoMatplotlib(self.notebook_1))
        #self.paginaNotebook1 = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.notebook_2 = wx.Notebook(self, wx.ID_ANY)
        self.notebook_2_pane_2 = wx.Panel(self.notebook_2, wx.ID_ANY)
        self.PanelInformacion = wx.Panel(self, wx.ID_ANY)

        self.__set_properties()
        self.__do_layout()

        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("frame")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.StaticBoxSizer(wx.StaticBox(self, wx.ID_ANY, "Control"), wx.VERTICAL)
        self.notebook_1.AddPage(self.paginas[0], "Bienvenido")
        figInicial=self.paginas[0].figure
        a1=figInicial.gca()
        im = Image.open('54fb8810327dd.jpg')
        araar=np.array(im)
        a1.imshow(araar)
        sizer_1.Add(self.notebook_1, 3, wx.EXPAND, 0)
        self.notebook_2.AddPage(self.notebook_2_pane_2, "notebook_2_pane_1")
        sizer_2.Add(self.notebook_2, 1, wx.EXPAND, 0)
        sizer_2.Add(self.PanelInformacion, 1, wx.EXPAND, 0)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def guardarImagen(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'guardarImagen' not implemented!")
        event.Skip()

    def importarImagen(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'importarImagen' not implemented!")
        event.Skip()

    def exportarImagen(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'exportarImagen' not implemented!")
        event.Skip()

    def abrirImagen(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'abrirImagen' not implemented!")
        event.Skip()

    def calibracion_manual(self, event):  # wxGlade: MyFrame.<event_handler>
    	dialogoCalibracion=DialogoCalibracion(self)
    	dialogoCalibracion.ShowModal()
    	if dialogoCalibracion.resultado[0]!='cancelar':
    		print(dialogoCalibracion.resultado)
    	self.paginas.append(ImagenCuadernoMatplotlib(self.notebook_1))
    	self.notebook_1.AddPage(self.paginas[-1], "Calibracion")
    	nuem=self.notebook_1.GetPageCount()-1
    	self.notebook_1.SetSelection(nuem)
    	figActual=self.paginas[-1].figure
    	a1=figActual.gca()
    	aray=tiff.imread(dialogoCalibracion.resultado[0])
    	print((aray/65535.0)*255)
    	escalado=(aray/65535.0)*255
    	a1.imshow(escalado.astype(int))	
    	dosisReal=leerDosis(dialogoCalibracion.resultado[1])
    	n=len(dosisReal)
    	k=figActual.ginput(n=2*n)
    	print(dosisReal)
    	x=[]
    	y=[]
    	promedioRojo=[]
    	promedioVerde=[]
    	promedioAzul=[]
    	for i in range(2*n):
    		x.append(k[i][0])
    		y.append(k[i][1])
    	for i in range(1,2*n,2):
    		prom=np.mean(aray[min(int(y[i-1]),int(y[i])):max(int(y[i-1]),int(y[i])),min(int(x[i-1]),int(x[i])):max(int(x[i-1]),int(x[i])),:],axis=(0,1))
    		promedioRojo.append(prom[0])
    		promedioVerde.append(prom[1])
    		promedioAzul.append(prom[2])
    	promedioRojo.sort(reverse=True)
    	promedioVerde.sort(reverse=True)
    	promedioAzul.sort(reverse=True)
    	self.paginas.append(ImagenCuadernoMatplotlib(self.notebook_1))	
    	self.notebook_1.AddPage(self.paginas[-1], "Curva Calibracion")	
    	nuem=self.notebook_1.GetPageCount()-1
    	self.notebook_1.SetSelection(nuem)
    	figActual=self.paginas[-1].figure
    	a1=figActual.gca()
    	#a1.scatter(dosisReal,promedioRojo,marker='x',color='r')
    	#a1.scatter(dosisReal,promedioVerde,marker='x',color='g')
    	#a1.scatter(dosisReal,promedioAzul,marker='x',color='b')
    	a1.plot(dosisReal,promedioRojo, 'xr-')
    	a1.plot(dosisReal,promedioVerde, 'xg-')
    	a1.plot(dosisReal,promedioAzul, 'xb-')

    def calibracion_automatica(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'calibracion_automatica' not implemented!")
        event.Skip()

    def mapa_de_dosis(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'mapa_de_dosis' not implemented!")
        event.Skip()

# end of class MyFrame




class MyApp(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True
        
 

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
