#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.6 on Sun Sep 13 14:12:14 2020
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
from wx import x
# end wxGlade


class MyDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyDialog.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.SetSize((713, 380))
        self.SelectorImagen = wxFilePickerCtrl(self, wx.ID_ANY)
        self.window_1 = wxFilePickerCtrl(self, wx.ID_ANY)
        self.combo_box_canal = wx.ComboBox(self, wx.ID_ANY, choices=["Multicanal", "Canales individuales(RGB)"], style=wx.CB_DROPDOWN)
        self.combo_box_curva = wx.ComboBox(self, wx.ID_ANY, choices=["Reciproca lineal", "Racional lineal", "Racional cuadratica", "Racional cubica", "Exponencial polinomica", "Lineal (Dosis bajas)"], style=wx.CB_DROPDOWN)
        self.checkboxLateral = wx.CheckBox(self, wx.ID_ANY, "Correccion lateral")
        self.checkboxBackground = wx.CheckBox(self, wx.ID_ANY, "Background")
        self.Aceptar = wx.Button(self, wx.ID_ANY, "Aceptar")
        self.button_1 = wx.Button(self, wx.ID_ANY, "Cancelar")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.aceptar, self.Aceptar)
        self.Bind(wx.EVT_BUTTON, self.cancelar, self.button_1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyDialog.__set_properties
        self.SetTitle(u"Calibraci√≥n Manual")
        self.SetSize((713, 380))
        self.SelectorImagen.SetMinSize((160, 20))
        self.window_1.SetMinSize((160, 20))
        self.combo_box_canal.SetSelection(0)
        self.combo_box_curva.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyDialog.__do_layout
        grid_sizer_1 = wx.GridSizer(6, 2, 2, 2)
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        labelRutaImagen = wx.StaticText(self, wx.ID_ANY, "Ruta Imagen", style=wx.ALIGN_CENTER)
        grid_sizer_1.Add(labelRutaImagen, 0, wx.ALIGN_CENTER | wx.ALL | wx.FIXED_MINSIZE, 2)
        grid_sizer_1.Add(self.SelectorImagen, 1, wx.ALIGN_CENTER, 0)
        labelRutaDatosCalibracion = wx.StaticText(self, wx.ID_ANY, "Ruta datos de calibracion")
        grid_sizer_1.Add(labelRutaDatosCalibracion, 0, wx.ALIGN_CENTER | wx.ALL, 0)
        grid_sizer_1.Add(self.window_1, 0, wx.ALIGN_CENTER, 0)
        labelTipo = wx.StaticText(self, wx.ID_ANY, "Canal de calibracion")
        grid_sizer_1.Add(labelTipo, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_1.Add(self.combo_box_canal, 0, wx.ALIGN_CENTER | wx.FIXED_MINSIZE, 0)
        labelTipoCurva = wx.StaticText(self, wx.ID_ANY, "Tipo de calibracion", style=wx.ALIGN_CENTER)
        grid_sizer_1.Add(labelTipoCurva, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_1.Add(self.combo_box_curva, 0, wx.ALIGN_CENTER | wx.FIXED_MINSIZE, 0)
        labelCorecciones = wx.StaticText(self, wx.ID_ANY, "Correcciones")
        grid_sizer_1.Add(labelCorecciones, 0, wx.ALIGN_CENTER, 0)
        sizer_1.Add(self.checkboxLateral, 0, wx.ALL | wx.EXPAND, 0)
        sizer_1.Add(self.checkboxBackground, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(sizer_1, 0, wx.ALIGN_CENTER | wx.ALL | wx.FIXED_MINSIZE | wx.SHAPED, 0)
        grid_sizer_1.Add(self.Aceptar, 0, wx.ALIGN_RIGHT | wx.ALL, 1)
        grid_sizer_1.Add(self.button_1, 0, 0, 0)
        self.SetSizer(grid_sizer_1)
        self.Layout()
        # end wxGlade

    def aceptar(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'aceptar' not implemented!")
        event.Skip()

    def cancelar(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'cancelar' not implemented!")
        event.Skip()

# end of class MyDialog

class MyApp(wx.App):
    def OnInit(self):
        self.dialog = MyDialog(None, wx.ID_ANY, "")
        self.SetTopWindow(self.dialog)
        self.dialog.ShowModal()
        self.dialog.Destroy()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
